spring.application.name=ReservationService
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none

spring.flyway.baseline-on-migrate=true
# spring.flyway.baseline-version=3


springdoc.swagger-ui.path=/openapi/swagger-ui.html
springdoc.api-docs.path=/openapi/v1/api-docs

logging.level.it.wa2.reservationservice=INFO
logging.level.root=WARN
logging.file.name=reservationService.log
logging.file.path=/var/log/reservationService

spring.mvc.problemdetails.enabled=true

spring.docker.compose.enabled=false
spring.datasource.url=jdbc:postgresql://localhost:5432/db1
spring.datasource.username=user1
spring.datasource.password=pass1

spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}

spring.flyway.enabled=true
spring.flyway.target=latest
spring.flyway.locations=classpath:db/migration

user.service.url=http://localhost:8081
payment.service.url=http://localhost:8082
spring.cloud.compatibility-verifier.enabled=false

spring.config.activate.on-profile.test.spring.datasource.url=jdbc:postgresql://localhost:5432/db3
spring.config.activate.on-profile.test.spring.datasource.username=user3
spring.config.activate.on-profile.test.spring.datasource.password=pass3



# Kafka configuration
spring.kafka.bootstrap-servers=localhost:9091
spring.kafka.consumer.group-id=reservation-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.listener.ack-mode=manual_immediate

#Keycloack configuration service-to-service comunication
spring.security.oauth2.client.registration.keycloak.client-id=ReservationServiceClient
spring.security.oauth2.client.registration.keycloak.client-secret=97LVqRhyfOTEN1hNn6BzpeAgkDcWmCcv
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:9095/realms/ez_car_rent/protocol/openid-connect/token

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9095/realms/ez_car_rent